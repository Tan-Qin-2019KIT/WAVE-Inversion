# Input file WAVE-Inversion
# The format has to be name=value (without any white spaces)
# Use the hashtag "#" for comments

#---------------------------------------------------------#
#             Forward modelling parameters                #
#---------------------------------------------------------#

# Type of forward simulation
dimension=3D              # Dimension: 2D or 3D
equationType=acoustic     # Type of wave equation: acoustic, elastic, visco

# define spatial sampling: number of grid points in direction
useVariableGrid=0
partitioning=1
useVariableFDoperators=0

writeCoordinate=0

NX=40                    # horizontal 1
NY=40                    # depth
NZ=40                    # horizontal 2

# define Partitioning
ShotDomainDefinition=0              # 0 define domains by ProcNS, #1 define by node id, #2 define by env var DOMAIN
NumShotDomains=2                  # Number of shot domains

# distance between two grid points
DH=50                     # in meter

# define temporal sampling
DT=2.0e-03                # temporal sampling in seconds
T=1                       # total simulation time in seconds 

# define order of spatial FD operator
spatialFDorder=2          # possible values 2, 4, 6, 8, 10 and 12

# define material parameter
ModelRead=0               # 1=Model will be read from file, 0=generated on the fly
ModelWrite=1              # 1=Model will be written to disk, 0=not
ModelFilename=../model/ToyModel # The ending vp.mtx, vs.mtx and density.mtx will be added automatically. 

#input-output
FileFormat=1  # file format for input and output  of models and wavefields

# Supported formats:
# 1=mtx : formated ascii file - serial IO
# 2=lmf : binary file - parallel IO - float - little endian - 5 int header (20 byte)
# 3=frv : binary file - serial IO - float - little endian - seperate header

# Apply the free surface condition
FreeSurface=0             # 1=ON, 0=OFF

# Damping Boundary
DampingBoundary=1         # 1=ON, 0=OFF
DampingBoundaryType=1     # Type of damping boundary: 1=ABS 2=CPML
BoundaryWidth=5          # Width of damping boundary in grid points
DampingCoeff=8.0          # Damping coefficient 
VMaxCPML=3500.0           # Maximum velocity of the CPML
CenterFrequencyCPML=5.0   # Center frequency inside the boundaries
NPower=4.0
KMaxCPML=1.0
    
# Viscoelastic modelling
numRelaxationMechanisms=0 # Number of relaxation mechanisms 
relaxationFrequency=0     # Relaxation frequency

# generate homogeneous model
velocityP=3500            # P-wave velocity in meter per seconds
velocityS=0               # S-wave velocity in meter per seconds
rho=2000                  # Density in kilo gramms per cubic meter
tauP=0.0                  # Tau value for P-waves
tauS=0.0                  # Tau value for S-waves

saveSnapshots=0
tincSnapshot=0
tlastSnapshot=0
tFirstSnapshot=0

# Acquisition
SourceFilename=Input/sources         # location of source file
ReceiverFilename=Input/receiver      # location of receiver file
SeismogramFilename=../seismograms/ToyExample      # target location of seismogram
SeismogramFormat=1                             # 1=MTX (ascii serial), 2=lmf(binary parallel) 3=frv (binary serial), 4=SU (parallel)
# 1=mtx : formated ascii file - serial IO - 2 line ascii header
# 2=lmf : binary file - parallel IO - float - little endian - 6 int header (24 byte)
# 3=frv : binary file - serial IO - float - little endian - seperate header
# 4=su  : binary file - parallel IO - float - little endian - 240 byte header per trace
seismoDT=2.0e-03
normalizeTraces=0                              # 1=Normalize Traces of the Seismogram, 0=Not Normalized
runSimultaneousShots=0
useReceiversPerShot=0
initSourcesFromSU=0
initReceiverFromSU=0

#---------------------------------------------------------#
#                Inversion Parameters                     #
#---------------------------------------------------------#

# Input/Output
fieldSeisName=../seismograms/ToyExample.true        # location/basename of input seismograms
writeGradient=1                        # 1=Gradient will be written to disk, 0=not
writeGradientPerShot=0                 # Write Gradient for Single Shots 1=Yes 0=No
normalizeGradient=1
useGradientTaper=0
gradientFilename=../gradients/ToyExample.grad        # location/basename of output gradients
logFilename=../logs/ToyExample.steplengthSearch.log  # target location of log file

# General settings
maxIterations=3                       # maximum number of inversion iterations
misfitType=L2                          # type of misfit (L2, etc.) 
optimizationType=conjugateGradient     # type of optimization method
DTInversion=1					# factor of DT for cross-correlation in gradient calculation
workflowFilename=Input/workflow.txt # location/basename of workflow file

# Step length search
steplengthInit=0.03                    # starting steplength
maxStepCalc=2                          # maximum number of additional forward calculations to find a proper step length
scalingFactor=2                        # factor for multiplication or division of test step length
steplengthMin=0.001                    # minimum step length
steplengthMax=0.1                      # maximum step length
testShotStart=0                        # shot number of first test shot
testShotEnd=8                         # shot number of last test shot
testShotIncr=2                         # increment of test shots

useSourceSignalInversion=0
useModelThresholds=0
# Preconditioning
sourceTaperRadius=20    # Circular source taper: Radius in gridpoints
receiverTaperRadius=20  # Circular receiver taper: Radius in gridpoints
sourceReceiverTaperType=1


useEnergyPreconditioning=1 # approximated diagonal Hessian is applied to gradient per shot
epsilonHessian=0.005       # parameter to stabilize matrix inversion (recommended: 0.005)
saveApproxHessian=0
approxHessianName=gradients/Hessian

verbose=0
